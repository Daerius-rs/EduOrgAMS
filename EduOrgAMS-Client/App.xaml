<Application x:Class="EduOrgAMS.Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:EduOrgAMS.Client"
             xmlns:convertersLocal="clr-namespace:EduOrgAMS.Client.Converters"
             xmlns:convertersRis="clr-namespace:RIS.Graphics.WPF.Xaml.Converters;assembly=RIS.Graphics"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="Window.Main.TitleBackground" Color="{DynamicResource MahApps.Colors.ThemeBackground}"/>
            <SolidColorBrush x:Key="Window.Main.NonActiveTitleBackground" Color="{DynamicResource MahApps.Colors.ThemeBackground}"/>
            <SolidColorBrush x:Key="Window.Main.Background" Color="{DynamicResource MahApps.Colors.ThemeBackground}"/>

            <SolidColorBrush x:Key="Overlay.Background" Color="#E54D4D4D"/>

            <Style x:Key="DescriptionHeader"
                   BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="22" />
            </Style>

            <Style TargetType="TextBlock" x:Key="AccentHeader">
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Accent}"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="Header1">
                <Setter Property="FontSize" Value="22" />
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="Header2">
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}"/>
                <Setter Property="FontSize" Value="20"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="Header3">
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <Style TargetType="TextBlock" x:Key="Paragraph">
                <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Text}"/>
            </Style>

            <Style x:Key="NormalCasingColumnHeader"
                   TargetType="{x:Type DataGridColumnHeader}"
                   BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
            </Style>

            <Style x:Key="MahApps.Styles.Button.Square.Accent.TextWrapping"
                   TargetType="{x:Type ButtonBase}"
                   BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <controls:ClipBorder x:Name="Background"
                                                     Background="{TemplateBinding Background}"
                                                     BorderBrush="{TemplateBinding BorderBrush}"
                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                     CornerRadius="{TemplateBinding controls:ControlsHelper.CornerRadius}"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <controls:ClipBorder x:Name="DisabledVisualElement"
                                                     Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                                     CornerRadius="{TemplateBinding controls:ControlsHelper.CornerRadius}"
                                                     IsHitTestVisible="False"
                                                     Opacity="0"
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Rectangle x:Name="MouseOverRectangle"
                                               Fill="{DynamicResource MahApps.Brushes.Button.AccentedSquare.Background.MouseOver}"
                                               Opacity="0" />
                                    <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                               Padding="{TemplateBinding Padding}"
                                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                               RecognizesAccessKey="{TemplateBinding controls:ControlsHelper.RecognizesAccessKey}"
                                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <TextBlock Text="{TemplateBinding Content}"
                                                   MinHeight="15"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   TextAlignment="Center" TextWrapping="Wrap"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </controls:ContentControlEx>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="InvalidFocused" />
                                        <VisualState x:Name="InvalidUnfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Button.AccentedSquare.Foreground.MouseOver}" />
                                    <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                                    <Setter TargetName="MouseOverRectangle" Property="Opacity" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultDialog"
                   TargetType="{x:Type controls:CustomDialog}"
                   BasedOn="{StaticResource MahApps.Styles.BaseMetroDialog}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:CustomDialog}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="DialogShownStoryboard">
                                    <DoubleAnimation AccelerationRatio=".9"
                                                     BeginTime="0:0:0"
                                                     Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"/>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <Grid Background="{TemplateBinding Background}">
                                <Border FocusVisualStyle="{x:Null}"
                                        Focusable="False">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <ContentPresenter Grid.Row="0"
                                                          Content="{TemplateBinding DialogTop}"/>
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10*"/>
                                                <ColumnDefinition Width="80*"/>
                                                <ColumnDefinition Width="10*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid Grid.Column="1"
                                                  Margin="0 10 0 0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0"
                                                           FontSize="{DynamicResource DialogTitleFontSize}"
                                                           Style="{DynamicResource Header2}"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           Text="{TemplateBinding Title}"
                                                           TextWrapping="Wrap"/>
                                                <ContentPresenter Grid.Row="1"
                                                                  Content="{TemplateBinding Content}"/>
                                            </Grid>
                                        </Grid>
                                        <ContentPresenter Grid.Row="2"
                                                          Content="{TemplateBinding DialogBottom}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}"/>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <convertersLocal:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <convertersLocal:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
            <convertersLocal:IntToStringConverter x:Key="IntToStringConverter"/>
            <convertersLocal:StatIntToBorderBackgroundConverter x:Key="StatIntToBorderBackgroundConverter"/>
            <convertersLocal:ProfileStatStringToVisibilityConverter x:Key="ProfileStatStringToVisibilityConverter"/>
            <convertersLocal:ProfileStatIntToVisibilityConverter x:Key="ProfileStatIntToVisibilityConverter"/>
            <convertersLocal:ProfileStatULongToVisibilityConverter x:Key="ProfileStatULongToVisibilityConverter"/>
            <convertersLocal:ProfileStatCollectionToVisibilityConverter x:Key="ProfileStatCollectionToVisibilityConverter"/>
            <convertersLocal:ProfileStatVisibilityMultiConverter x:Key="ProfileStatVisibilityMultiConverter"/>
            <convertersLocal:ProfileStatBlockVisibilityMultiConverter x:Key="ProfileStatBlockVisibilityMultiConverter"/>
            <convertersLocal:BirthDateToAgeStringConverter x:Key="BirthDateToAgeStringConverter"/>
            <convertersLocal:GenderToStringConverter x:Key="GenderToStringConverter"/>
            <convertersLocal:GenderToVisibilityConverter x:Key="GenderToVisibilityConverter"/>
            <convertersLocal:UserNameConverter x:Key="UserNameConverter"/>
            <convertersLocal:RoleConverter x:Key="RoleConverter"/>
            <convertersLocal:RoleToStringConverter x:Key="RoleToStringConverter"/>
            <convertersLocal:RoleToVisibilityConverter x:Key="RoleToVisibilityConverter"/>
            <convertersLocal:UserAvatarImageSourceConverter x:Key="UserAvatarImageSourceConverter"/>
            <convertersLocal:OwnerIdToVisibilityConverter x:Key="OwnerIdToVisibilityConverter"/>
            <convertersLocal:PreviewImageSourceConverter x:Key="PreviewImageSourceConverter"/>
            <convertersLocal:UnixTimeToStringConverter x:Key="UnixTimeToStringConverter"/>
            <convertersLocal:MinimumAccessRoleToVisibilityConverter x:Key="MinimumAccessRoleToVisibilityConverter"/>

            <convertersRis:SimpleArithmeticConverter x:Key="SimpleArithmeticConverter"/>
            <convertersRis:ScriptEvaluatorConverter x:Key="ScriptEvaluatorConverter"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>
